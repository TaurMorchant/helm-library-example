name: Manual Helm Library Release (gh-pages)

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from Chart.yaml
        id: chart
        run: |
          version=$(grep '^version:' lib/Chart.yaml | awk '{print $2}')
          echo "chart_version=$version" >> "$GITHUB_OUTPUT"

      - name: Check if release already exists
        run: |
          tag="v${{ steps.chart.outputs.chart_version }}"
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag)
          if [ "$response" -eq 200 ]; then
            echo "‚ùå Release with tag $tag already exists!"
            exit 1
          fi

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Package Helm chart
        run: |
          mkdir -p .build
          helm package lib --destination .build

      - name: Prepare gh-pages
        run: |
          git fetch origin gh-pages
          git worktree add gh-pages gh-pages

      - name: Update index.yaml and push to gh-pages
        run: |
          cd gh-pages
          cp ../.build/*.tgz .
          helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }} --merge index.yaml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Publish chart version ${{ steps.chart.outputs.chart_version }}" || echo "No changes"
          git push origin gh-pages
          
      - name: Wait for index.yaml to be updated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚è≥ Waiting for index.yaml to be updated with version ${{ steps.chart.outputs.chart_version }}..."
          
          for i in {1..20}; do
            echo "Checking index.yaml..."
            response=$(curl -s https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml)
            
            if echo "$response" | grep -q "version: ${{ steps.chart.outputs.chart_version }}"; then
              echo "‚úÖ Found version ${{ steps.chart.outputs.chart_version }} in index.yaml"
              exit 0
            fi
            
            echo "Attempt $i: Version not found yet. Waiting..."
            sleep 10
          done
          
          echo "‚ùå Timed out waiting for index.yaml to be updated."
          exit 1

      - name: Upload Helm package to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.chart.outputs.chart_version }}
          name: Helm library v${{ steps.chart.outputs.chart_version }}
          body: |
            Helm chart released.

            üì¶ Helm repo: [index.yaml](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml)
          files: .build/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
