name: Manual Helm Library Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Extract version from Chart.yaml
        id: chart
        run: |
          version=$(grep '^version:' lib/Chart.yaml | awk '{print $2}')
          echo "chart_version=$version" >> "$GITHUB_OUTPUT"

      - name: Check if release already exists
        run: |
          tag="v${{ steps.chart.outputs.chart_version }}"
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag)

          if [ "$response" -eq 200 ]; then
            echo "‚ùå Release with tag $tag already exists!"
            exit 1
          fi

      - name: Package Helm library
        run: |
          mkdir -p .build
          helm package lib --destination .build

      - name: Update Helm repo index in docs/
        run: |
          mkdir -p docs
          helm repo index .build --url https://taurmorchant.github.io/helm-library-example --merge docs/index.yaml
          cp .build/*.tgz docs/
          mv .build/index.yaml docs/index.yaml

      - name: Commit and push changes to docs/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add docs/
          git commit -m "Release Helm library version ${{ steps.chart.outputs.chart_version }}" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git push origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.chart.outputs.chart_version }}
          name: Helm library v${{ steps.chart.outputs.chart_version }}
          body: |
            Helm chart released.

            üì¶ Helm repo: [index.yaml](https://taurmorchant.github.io/helm-library-example/index.yaml)
          files: .build/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
